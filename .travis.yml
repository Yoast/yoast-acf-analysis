os: linux
dist: xenial
language: php

cache:
  yarn: true
  directories:
    - .cache
    - vendor
    # Cache directory for older Composer versions.
    - $HOME/.composer/cache/files
    # Cache directory for more recent Composer versions.
    - $HOME/.cache/composer/files

branches:
  only:
    - master
    - develop
    - /^release\/\d+\.\d+(\.\d+)?(-\S*)?$/
    - /^hotfix\/\d+\.\d+(\.\d+)?(-\S*)?$/

jobs:
  fast_finish: true
  include:
    - php: 7.4
      env: PHPCS=1 CHECKJS=1 PHPUNIT=1 SECURITY=1 TRAVIS_NODE_VERSION=node
    - php: 5.6
      env: PHPUNIT=1
    - php: 7.0
      env: PHPUNIT=1
    - php: 8.0
      env: PHPUNIT=1
    - php: "nightly"

  allow_failures:
    # Allow failures for unstable builds.
    - php: "nightly"

before_install:
- export SECURITYCHECK_DIR=/tmp/security-checker
- if [[ "$CHECKJS" == "1" ]]; then nvm install $TRAVIS_NODE_VERSION; fi
- if [[ "$CHECKJS" == "1" ]]; then curl -o- -L https://yarnpkg.com/install.sh | bash; fi
- if [[ "$CHECKJS" == "1" ]]; then export PATH=$HOME/.yarn/bin:$PATH; fi

install:
- |
  if [[ ${TRAVIS_PHP_VERSION:0:1} == "8" || $TRAVIS_PHP_VERSION == "nightly" ]]; then
    travis_retry composer update yoast/wp-test-utils --with-dependencies --no-interaction --ignore-platform-reqs
  else
    travis_retry composer install --no-interaction
  fi
- if [[ "$CHECKJS" == "1" ]]; then yarn global add grunt-cli; fi
- if [[ "$CHECKJS" == "1" ]]; then yarn install; fi
- if [[ "$SECURITY" == "1" ]]; then wget -P $SECURITYCHECK_DIR https://github.com/fabpot/local-php-security-checker/releases/download/v1.0.0/local-php-security-checker_1.0.0_linux_amd64 && chmod +x $SECURITYCHECK_DIR/local-php-security-checker_1.0.0_linux_amd64;fi

script:
- composer lint
- if [[ "$PHPCS" == "1" ]]; then composer check-cs; fi
- if [[ "$CHECKJS" == "1" ]]; then grunt check; fi
- if [[ "$PHPUNIT" == "1" ]]; then composer test; fi
- if [[ $TRAVIS_PHP_VERSION == "5.6" || $TRAVIS_PHP_VERSION == "7.4" ]]; then composer validate --no-check-all; fi
# Check for known security vulnerabilities in the currently locked-in dependencies.
$SECURITYCHECK_DIR/local-php-security-checker_1.0.0_linux_amd64 --path=$(pwd)/composer.lock;fi
