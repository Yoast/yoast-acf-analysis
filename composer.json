{
	"name": "yoast/yoast-acf-analysis",
	"description": "WordPress plugin that adds the content of all ACF fields to the Yoast SEO score analysis.",
	"license": "GPL-3.0-or-later",
	"type": "wordpress-plugin",
	"keywords": [
		"yoast",
		"seo",
		"acf",
		"advanced",
		"custom",
		"fields",
		"analysis",
		"search",
		"engine",
		"optimization",
		"seo",
		"score"
	],
	"authors": [
		{
			"name": "Thomas Kr√§ftner",
			"email": "thomas@kraftner.com",
			"homepage": "http://kraftner.com",
			"role": "Developer"
		},
		{
			"name": "Marcus Forsberg",
			"homepage": "https://forsberg.ax",
			"role": "Developer"
		},
		{
			"name": "Team Yoast",
			"email": "support@yoast.com",
			"homepage": "https://yoast.com"
		}
	],
	"homepage": "https://wordpress.org/plugins/acf-content-analysis-for-yoast-seo/",
	"support": {
		"issues": "https://github.com/Yoast/yoast-acf-analysis/issues",
		"forum": "https://wordpress.org/support/plugin/acf-content-analysis-for-yoast-seo",
		"source": "https://github.com/Yoast/yoast-acf-analysis",
		"security": "https://yoast.com/security-program/"
	},
	"require": {
		"php": "^7.2.5 || ^8.0",
		"composer/installers": "^1.12.0 || ^2.0"
	},
	"require-dev": {
		"yoast/wp-test-utils": "^1.2.0",
		"yoast/yoastcs": "^3.0"
	},
	"minimum-stability": "dev",
	"prefer-stable": true,
	"autoload": {
		"classmap": [
			"inc"
		]
	},
	"autoload-dev": {
		"classmap": [
			"config/"
		],
		"psr-4": {
			"Yoast\\WP\\ACF\\Tests\\": "tests/"
		},
		"files": [
			"tests/js/system/data/test-data-loader-functions.php"
		]
	},
	"config": {
		"allow-plugins": {
			"dealerdirect/phpcodesniffer-composer-installer": true,
			"composer/installers": true
		},
		"platform": {
			"php": "7.2.5"
		}
	},
	"scripts": {
		"lint": [
			"@php ./vendor/php-parallel-lint/php-parallel-lint/parallel-lint . -e php --show-deprecated --exclude vendor --exclude node_modules --exclude .git"
		],
		"cs": [
			"Yoast\\WP\\ACF\\Config\\Composer\\Actions::check_coding_standards"
		],
		"check-cs-thresholds": [
			"@putenv YOASTCS_THRESHOLD_ERRORS=11",
			"@putenv YOASTCS_THRESHOLD_WARNINGS=0",
			"Yoast\\WP\\ACF\\Config\\Composer\\Actions::check_cs_thresholds"
		],
		"check-cs": [
			"@check-cs-warnings -n"
		],
		"check-cs-errors": [
			"@check-cs"
		],
		"check-cs-warnings": [
			"@php ./vendor/squizlabs/php_codesniffer/bin/phpcs"
		],
		"check-staged-cs": [
			"@check-cs-warnings --filter=GitStaged"
		],
		"check-branch-cs": [
			"Yoast\\WP\\ACF\\Config\\Composer\\Actions::check_branch_cs"
		],
		"fix-cs": [
			"@php ./vendor/squizlabs/php_codesniffer/bin/phpcbf"
		],
		"test": [
			"@php ./vendor/phpunit/phpunit/phpunit --no-coverage"
		],
		"coverage": [
			"@php ./vendor/phpunit/phpunit/phpunit"
		]
	},
	"scripts-descriptions": {
		"lint": "Check the PHP files for parse errors.",
		"cs": "See a menu with the code style checking script options.",
		"check-cs-thresholds": "Check the PHP files for code style violations and best practices and verify the number of issues does not exceed predefined thresholds.",
		"check-cs": "Check the PHP files for code style violations and best practices, ignoring warnings.",
		"check-cs-errors": "Alias for check-cs script.",
		"check-cs-warnings": "Check the PHP files for code style violations and best practices, including warnings.",
		"check-staged-cs": "Check the staged PHP files for code style violations and best practices.",
		"check-branch-cs": "Check the PHP files changed in the current branch for code style violations and best practices.",
		"fix-cs": "Auto-fix code style violations in the PHP files.",
		"test": "Run the unit tests without code coverage.",
		"coverage": "Run the unit tests with code coverage."
	}
}
