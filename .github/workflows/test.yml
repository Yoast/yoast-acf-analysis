name: Test

on:
  # Run on pushes to select branches and on all pull requests.
  push:
    branches:
      - main
      - develop
      - 'release/[0-9]+.[0-9]+*'
      - 'hotfix/[0-9]+.[0-9]+*'
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ['7.4', '8.0', '8.1']
        coverage: [false]

        # Run code coverage only on high/low PHP.
        include:
        - php_version: 7.2
          coverage: true
        - php_version: 8.2
          coverage: true

    name: "Unit Test: PHP ${{ matrix.php_version }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
          coverage: ${{ matrix.coverage == true && 'xdebug' || 'none' }}

      # The PHP platform requirement would prevent updating the test utilities to the appropriate versions.
      # As long as the `composer update` is run selectively to only update the test utils, removing this is fine.
      - name: "Composer: remove the PHP platform requirement"
        run: composer config --unset platform.php

      # Install dependencies and handle caching in one go.
      # - Updates the test utilities to the most appropriate version for the PHP version on which the tests will be run.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          # Force a `composer update` run.
          dependency-versions: "highest"
          # But make it selective.
          composer-options: "yoast/wp-test-utils --with-dependencies"
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Run unit tests
        if: ${{ matrix.coverage == false }}
        run: composer test

      - name: Run the unit tests with code coverage
        if: ${{ matrix.coverage == true }}
        run: composer coverage

      # PHP Coveralls doesn't fully support PHP 8.x yet, so switch the PHP version.
      - name: Switch to PHP 7.4
        if: ${{ success() && matrix.coverage == true && startsWith( matrix.php_version, '8' ) }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none

      # Global install is used to prevent a conflict with the local composer.lock in PHP 8.0+.
      - name: Install Coveralls
        if: ${{ success() && matrix.coverage == true }}
        run: composer global require php-coveralls/php-coveralls:"^2.5.3" --no-interaction

      - name: Upload coverage results to Coveralls
        if: ${{ success() && matrix.coverage == true }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: php-${{ matrix.php_version }}
        run: php-coveralls -v -x build/logs/clover.xml

  coveralls-finish:
    needs: unit
    runs-on: ubuntu-latest

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.COVERALLS_TOKEN }}
          parallel-finished: true
